---
openapi: 3.0.0
info:
  title: Customer Information Application
  description: A set of RESTful API's that allow user to obtain all customer information, create a customer, update a customer, delete a customer
  termsOfService: https://link.termsOfService/index.html
  contact:
    name: Sukanta Sinha
    url: https://www.linkedin.com/in/sukanta-sinha-a3356218/
    email: sukantasinha2003@gmail.com
  version: 1.0.0
servers:
- url: https://localhost:8443
  description: development server
- url: https://prod.host.com/
  description: production server
paths:
  /displayAllCustomers:
    get:
      tags:
      - Customer Services
      summary: Display All Customers
      description: This API fetch and display all custmers information from customer database
      parameters:
      - name: bodyLimit
        in: query
        description: The number of customers return in a page
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 10
      - name: pageLimit
        in: query
        description: The pages to return customer information
        required: false
        style: form
        explode: true
        schema:
          maximum: 10
          minimum: 1
          type: integer
          example: 5
      responses:
        "200":
          description: Successfully fatched customer information from database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customers'
            application/xml:
              schema:
                $ref: '#/components/schemas/customers'
        "400":
          description: Invalid Input
        "401":
          description: Unauthorized
        "403":
          description: Forboiodden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        default:
          description: Application Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /createCustomer:
    post:
      tags:
      - Customer Services
      summary: Create a Customer
      description: This API will create a customer in customer database
      parameters:
      - name: name
        in: query
        description: Name of the Customer
        required: true
        style: form
        explode: true
        schema:
          maxLength: 50
          type: string
          example: Sukanta Sinha
      - name: address
        in: query
        description: Name of the Customer
        required: true
        style: form
        explode: true
        schema:
          maxLength: 50
          type: string
          example: Brisbane, Queensland, Australia, 4059
      - name: contactNumber
        in: query
        description: Name of the Customer
        required: true
        style: form
        explode: true
        schema:
          pattern: /(^1300\d{6}$)|(^1800|1900|1902\d{6}$)|(^0[2|3|7|8]{1}[0-9]{8}$)|(^13\d{4}$)|(^04\d{2,3}\d{6}$)/
          type: string
          example: "0469071111"
      - name: email
        in: query
        description: Name of the Customer
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sukantasinha2003@gmail.com
      responses:
        "200":
          description: Successfully created a new customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        "400":
          description: Invalid Input
        "401":
          description: Unauthorized
        "403":
          description: Forboiodden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        default:
          description: Application Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /updateCustomer:
    post:
      tags:
      - Customer Services
      summary: Update a Customer
      description: This API update all details of a customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/customers'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        "400":
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: Unauthorized
        "403":
          description: Forboiodden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        default:
          description: Application Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /updateContactNumber/{id}/{contactNumber}:
    post:
      tags:
      - Customer Services
      summary: Update Partial Customer Information
      description: This API update a customer's partial information, e.g. update only contact number
      parameters:
      - name: id
        in: path
        description: id of the customer, which user wants to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 2
      - name: contactNumber
        in: path
        description: contact number of the customer, which user wants to update
        required: true
        style: simple
        explode: false
        schema:
          pattern: /(^1300\d{6}$)|(^1800|1900|1902\d{6}$)|(^0[2|3|7|8]{1}[0-9]{8}$)|(^13\d{4}$)|(^04\d{2,3}\d{6}$)/
          type: string
          example: "0469071111"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        "400":
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: Unauthorized
        "403":
          description: Forboiodden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
        default:
          description: Application Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /deleteCustomer/{id}:
    delete:
      tags:
      - Customer Services
      summary: Delete a Customer
      description: This API delete a customer from customer database
      parameters:
      - name: id
        in: path
        description: id of the customer, which user wants to delete from customer database
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 2
      responses:
        "200":
          description: Successfully deleted customer {id}
  /ping:
    get:
      tags:
      - Customer Services
      summary: Server heartbeat operation
      description: This API will do a application health check
      responses:
        "200":
          description: Up
        "401":
          description: Unauthorized
        "403":
          description: Forboiodden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security: []
components:
  schemas:
    customers:
      type: array
      description: All customer information
      items:
        $ref: '#/components/schemas/customer'
    customer:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Sukanta Sinha
        address:
          type: string
          example: Brisbane, Queensland, Australia, 4059
        contactNumber:
          type: string
          example: "0469071111"
        email:
          type: string
          example: sukantasinha2003@gmail.com
      description: Model containing customer information
    error:
      properties:
        Exception Name:
          type: string
          example: NumberFormatException
        Exception Description:
          type: string
          example: This displays a NumberFormatException with a detailed message
      description: Display Application Exception
