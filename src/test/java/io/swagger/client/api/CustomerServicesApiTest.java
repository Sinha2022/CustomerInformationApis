/*
 * Customer Information Application
 * A set of RESTful API's that allow user to obtain all customer information, create a customer, update a customer, delete a customer
 *
 * OpenAPI spec version: 1.0.0
 * Contact: sukantasinha2003@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Customer;
import io.swagger.client.model.Customers;
import io.swagger.client.model.Error;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for CustomerServicesApi
 */
@Ignore
public class CustomerServicesApiTest {

    private final CustomerServicesApi api = new CustomerServicesApi();

    /**
     * Create a Customer
     *
     * This API will create a customer in customer database
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCustomerPostTest() throws Exception {
        String name = "Sukanta Sinha"; // String | Name of the Customer
        String address = "Red Hill, QLD, 4059"; // String | Name of the Customer
        String contactNumber = "0469071111"; // String | Name of the Customer
        String email = "sukantasinha2003@gmail.com"; // String | Name of the Customer

        Customer response = api.createCustomerPost(name, address, contactNumber, email);

        assertEquals(response.getStatusCode(), '200');
    }
    /**
     * Delete a Customer
     *
     * This API delete a customer from customer database
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerIdDeleteTest() throws Exception {
        Integer id = 1;
        api.deleteCustomerIdDelete(id);

        assertEquals(response.getStatusCode(), '200');
    }
    /**
     * Display All Customers
     *
     * This API fetch and display all custmers information from customer database
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void displayAllCustomersGetTest() throws Exception {
        Integer bodyLimit = 5;
        Integer pageLimit = 10;
        Customers response = api.displayAllCustomersGet(bodyLimit, pageLimit);

        assertEquals(response.getStatusCode(), '200');
    }
    /**
     * Server heartbeat operation
     *
     * This API will do a application health check
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pingGetTest() throws Exception {
        api.pingGet();
        assertEquals(api.pingGet().getStatusCode(), 'UP');
    }
    /**
     * Update Partial Customer Information
     *
     * This API update a customer&#x27;s partial information, e.g. update only contact number
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateContactNumberIdContactNumberPostTest() throws Exception {
        Integer id = 1;
        String contactNumber = "0469071222";
        Customer response = api.updateContactNumberIdContactNumberPost(id, contactNumber);
        assertEquals(response.getStatusCode(), '200');
    }
    /**
     * Update a Customer
     *
     * This API update all details of a customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateCustomerPostTest() throws Exception {
        Customer body = new Customer();
        body.setName("XYZ");
        body.setContactNumber("0564732345");
        body.setAddress("Indooroopilly, QLD, 4058");
        body.setEmail("sukantasinha2003@gmail.com");
        Customer response = api.updateCustomerPost(body);
        assertEquals(response.getStatusCode(), '200');
    }
}
